만드려 하는것 : 정렬알고리즘이 정렬되는 과정을 막대들의 나열의 위치의 변화로 보여주는 프로그램

정렬을 하는 도중에, 그 과정을 화면으로 출력해야된다.

이미지 출력 담당 클래스와, 이미지 관리(색, 위치변경 , 생성... ) 클래스를 만들고,
그것을 정렬 알고리즘 내에서 각 정렬 단계마다 호출하는형식으로?


===========

이벤트 감지
이벤트 처리
명령어 입력
명령어 처리 및 화면에 업데이트

===========

이벤트 감지 => 처리 (창 닫는것을 감지하는 용도로 실행된다)
명령어 입력 (실행할 명령어 . 원소 갯수 설정, 셔플, 정렬...)
명령어 처리 및 화면에 업데이트 (정렬된 후가 아닌, 정렬되는 과정을 그려내야하기에, 두 과정을 합쳐두었다.)

===========

명령어: 같이 뜨는 콘솔창에 입력하는 형태로 사용한다.
SetSize [배열 원소의 갯수] (정렬할 배열의 원소의 수를 설정하고, 원소들을 채운다)(주의: 1이상 8192 이하의 수만 된다.)o
Reset (배열의 원소들을 비운 후, 다시 채운다)o
Shuffle (배열의 원소를 랜덤으로 섞는다)o
Sort [원하는 정렬을 선택] (정렬을 수행하며, 그 과정을 화면에 출력한다)
Duplication [On/Off] (원소들을 배열에 채우는 과정에서, 중복값을 허용할지의 여부를 정한다.)o
Delay [원하는 수치] (정렬의 한 과정이 끝난 후 다음 과정으로 가기까지의 지연시간을 정한다.)o
===========

화면에 업데이트되는 조건은 다음과 같다.
원소의 위치가 바뀐다.
원소가 선택/선택해제된다.
===========
범위:
1 <= 원소의 갯수

1 <= 원소의 값 <= 원소의 갯수 (중복값은 허용될수도 있다)

바 한개당 넓이:
가로:
화면 가로 크기/(원소의 갯수)

바 한개당 높이:
상: 화면의 높이 - ((화면의 세로 크기/원소의 갯수)*원소의 값)
하:화면의 높이


바의 위치:
좌: (원소의 번호-1)*가로
우:원소의 번호*가로

바의 각 정점들의 좌표
삼각형1:
p1 : x=좌 y=상
p2 : x=우 y=상
p3 : x=우 y=하


삼각형2:
p1 : x=좌 y=상
p2 : x=우 y=하
p3 : x=좌 y=하
===========
VertexArray로 하면
Bar 클래스를 만들어야된다.
Bar클래스를 만들어서 안하면, 해줘야될게 정말 많아진다

BarManager:
내부에 VertexArray배열을 가짐
생성자:원소의 갯수와 원소의 배열을 인수로 받는다
recreate:원소의 갯수와 원소의 배열을 인수로 받는다. 내부 VertexArray를 초기화하고, 다시 생성한다.
reset:원소의 배열을 인수로 받는다. 내부 VertexArray의 좌표들만 수정한다.
setColor:인덱스와 색상을 인수로 받는다. 특정 bar의 색상을 지정한다.
changeCoord:인덱스 두개를 인수로 받는다. 두 bar의 위치를 변경한다.
getVertexArrayPointer:내부 VertexArray의 주소를 반환한다. 인라인

===========


랜더스레드,입력스레드,실행스레드 , / 이벤트스레드

아니면

랜더스레드 , 입력 및 실행스레드, 창 이벤트 스레드 v 이걸로

커멘드를 mutex로 할까 atomic으로 할까

============
